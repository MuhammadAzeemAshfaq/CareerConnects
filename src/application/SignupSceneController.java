package application;

import javafx.fxml.FXML;

import javafx.fxml.FXMLLoader;
import javafx.scene.control.TextField;
import javafx.scene.Node;

import javafx.event.ActionEvent;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.CheckBox;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.stage.Stage;
import javafx.scene.control.Alert;
import javafx.scene.control.Button; // Correct for JavaFX
import java.io.IOException;

import org.apache.commons.validator.EmailValidator;

import Backend.JobPortal;
import Backend.Profile;

public class SignupSceneController {
	private JobPortal jp;
	private String type;
	
	private Stage stage;
	 private Scene scene;
	 private Parent root;
	 
	 @FXML
	 private TextField nameField;
	 @FXML
	 private TextField contactField;
	 @FXML
	 private TextField emailField;
	 @FXML
	 private TextField usernameField;
	@FXML
	private TextField passwordShown;
	@FXML
	private PasswordField passwordHidden;
	@FXML
	private CheckBox cb;
	@FXML
	private CheckBox cb2;
	@FXML
	private Button LoginBtn;
	
	public SignupSceneController() 
	{
		jp = JobPortal.getInstance(); // Initialize JobPortal (Example)
		//jp=new JobPortal();
    }
	
	@FXML
	public void btnLoginClicked(ActionEvent event) 
	{
		// TODO Autogenerated
		String name=nameField.getText();
		String contact=contactField.getText();
		String email=emailField.getText();
		String username=usernameField.getText();
		String password=passwordHidden.getText();
		
		if(!passwordShown.isVisible())
		{
			password=passwordShown.getText();
		}
		else
		{
			password=passwordHidden.getText();
		}	
		
		type = cb2.isSelected() ? "Employee" : "JobSeeker";
		
		
		
		
		
		/*
		 * System.out.println("name:"+name); System.out.println("contact:"+contact);
		 * System.out.println("email:"+email); System.out.println("usernmae:"+username);
		 * System.out.println("pass:"+password);
		 */
		
		if(name.length()>0&&contact.length()>0&&email.length()>0&&username.length()>0&&password.length()>0)
		{
			for(Profile profile:jp.getAllProfiles())
			 {
				 if(profile.getuname().equals(username))
				 {
					 showAlert(Alert.AlertType.ERROR, "Username Exists", "The username already exists. Please choose another.");
					 //System.out.println("Username already exist");
			            return;
				 }
			 }
			
			for(Profile profile:jp.getAllProfiles())
			 {
				 if(profile.getEmail().equals(email))
				 {
					 showAlert(Alert.AlertType.ERROR, "Email Exists", "The email is already registered. Please choose another.");
					 System.out.println("Email already exist");
			            return;
				 }
			 }
			
			if (!email.matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$"))
			{
			    showAlert(Alert.AlertType.ERROR, "Invalid Email", 
			              "Please enter a valid email address.");
				//System.out.println("email method invalid");
			    return;
			}
			if (!isEmailValid(email)) 
			{
			    showAlert(Alert.AlertType.ERROR, "Invalid Email", "The email domain is invalid.");
			    return;
			}
			if(cb2.isSelected())
			{
				System.out.println("employee registering");
				
				this.jp.RegisterEmployer(name, email, contact, username, password);
			}
			else
			{
				System.out.println("jobseeker registering");
				this.jp.RegisterJobSeeker(name, email, contact, username, password);
			}
			//System.out.println("all fields fill");
			
			this.nameField.clear();
			this.emailField.clear();
			this.contactField.clear();
			this.passwordShown.clear();
			this.usernameField.clear();
			passwordHidden.clear();
			
			EmailService emailService = new EmailService();
			emailService.sendRegistrationEmail(email,name,type);
			
			showAlert(Alert.AlertType.INFORMATION,"Success","Registration successful");
			
		}
		
		
		
	}
	@FXML
	public void changeVisibility(ActionEvent event)
	{
		if(cb.isSelected())
		{
			passwordShown.setText(passwordHidden.getText());
			passwordShown.setVisible(true);
			passwordHidden.setVisible(false);
			return;
		}
		else
		{
			passwordHidden.setText(passwordShown.getText());
			passwordHidden.setVisible(true);
			passwordShown.setVisible(false);
		}
		
	}
	public void changeToSigninScene(ActionEvent event)
	{
		try {
			root = FXMLLoader.load(getClass().getResource("Login.fxml"));
			stage = (Stage)((Node)event.getSource()).getScene().getWindow();
			scene = new Scene(root);
			stage.setScene(scene);
			stage.show();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	private void showAlert(Alert.AlertType alerttype,String title,String message)
	{
	   	Alert alert=new Alert(alerttype);
	   	alert.setTitle(title);
	   	alert.setHeaderText(null);
	   	alert.setContentText(message);
	   	alert.showAndWait();
	}
	public boolean isEmailValid(String email) {
	    EmailValidator validator = EmailValidator.getInstance();
	    return validator.isValid(email);
	}
}
